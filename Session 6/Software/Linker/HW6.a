;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 4/20/2024
;Author  : kavousi.b99@gmail.com - Bahareh Kavousi nejad - 99431217
;Company : IUST
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*****************************************************/
;/*
;Bahareh Kavousi nejad - 99431217
;*/
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdlib.h>
;#include <string.h>
;#include <delay.h>
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;// Declare your global variables here
;unsigned int milisecond = 0;
;char str_ms[];
;unsigned int second = 0;
;char str_s[];
;unsigned int minute = 58;
;char str_m[];
;unsigned int hour = 23;
;char str_h[];
;
;
;interrupt [TIM1_COMPA] void timer1_compa_isr(void) {
; 0000 002D interrupt [8] void timer1_compa_isr(void) {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 002E     milisecond += 1;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 002F 
; 0000 0030 
; 0000 0031     if(hour == 24) {
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0032         lcd_gotoxy(3,1);
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0033         lcd_puts("  ");
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0034         hour=0;
;PCODE: $0000001C VOL: 0
; 0000 0035     }
; 0000 0036 
; 0000 0037     if (minute == 60) {
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0038         lcd_gotoxy(6,1);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0039         lcd_puts("  ");
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 003A         minute=0;
;PCODE: $00000028 VOL: 0
; 0000 003B         hour++;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 003C     }
; 0000 003D 
; 0000 003E     if (second == 60) {
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 003F         lcd_gotoxy(9,1);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0040         lcd_puts("  ");
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0041         second = 0;
;PCODE: $00000037 VOL: 0
; 0000 0042         minute++;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0043     }
; 0000 0044 
; 0000 0045     if (milisecond == 10) {
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0046         milisecond = 0;
;PCODE: $0000003F VOL: 0
; 0000 0047         second++;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0048     }
; 0000 0049 
; 0000 004A     itoa(milisecond, str_ms);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 004B     lcd_gotoxy(12,1);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 004C     lcd_puts(str_ms);
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 004D 
; 0000 004E     itoa(second, str_s);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 004F     lcd_gotoxy(9,1);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0050     lcd_puts(str_s);
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0051 
; 0000 0052     itoa(minute, str_m);
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0053     lcd_gotoxy(6,1);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0054     lcd_puts(str_m);
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0055 
; 0000 0056     itoa(hour, str_h);
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0057     lcd_gotoxy(3,1);
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0058     lcd_puts(str_h);
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0059 }
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0

	.DSEG
_0x4:
	.BYTE 0x9
;
;
;void main(void) {
; 0000 005C void main(void) {

	.CSEG
;PCODE: $0000006B VOL: 0
; 0000 005D     // Declare your local variables here
; 0000 005E 
; 0000 005F     DDRC=0xFF;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0060     PORTC=0x00;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0061 
; 0000 0062     TCCR1A=0x00;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0063     TCCR1B=0x0C;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0064     TCNT1H=0x00;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0065     TCNT1L=0x00;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0066     ICR1H=0x00;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0067     ICR1L=0x00;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0068     OCR1AH=0x0C;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0069     OCR1AL=0x35;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 006A     OCR1BH=0x00;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 006B     OCR1BL=0x00;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 006C 
; 0000 006D     TIMSK=0x10;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 006E 
; 0000 006F     // Alphanumeric LCD initialization
; 0000 0070     // Connections are specified in the
; 0000 0071     // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 0072     // RS - PORTC Bit 0
; 0000 0073     // RD - PORTC Bit 1
; 0000 0074     // EN - PORTC Bit 2
; 0000 0075     // D4 - PORTC Bit 4
; 0000 0076     // D5 - PORTC Bit 5
; 0000 0077     // D6 - PORTC Bit 6
; 0000 0078     // D7 - PORTC Bit 7
; 0000 0079     // Characters/line: 16
; 0000 007A 
; 0000 007B     // Global enable interrupts
; 0000 007C     #asm("sei")
;PCODE: $00000086 VOL: 0
	sei
;PCODE: $00000087 VOL: 0
; 0000 007D     lcd_init(16);
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 007E     lcd_clear();
;PCODE: $0000008A VOL: 0
; 0000 007F 
; 0000 0080     lcd_gotoxy(3,0);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0081     lcd_puts("LCD CLOCK");
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 0082 
; 0000 0083     lcd_gotoxy(11,1);
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0084     lcd_puts(":");
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 0085     lcd_gotoxy(5,1);
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0086     lcd_puts(":");
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0087     lcd_gotoxy(8,1);
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0088     lcd_puts(":");
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0089 
; 0000 008A     while(1) {
;PCODE: $000000A7 VOL: 0
; 0000 008B           // Place your code here
; 0000 008C 
; 0000 008D     }
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 008E }
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0

	.DSEG
_0x8:
	.BYTE 0x10
;
